{"ast":null,"code":"var _jsxFileName = \"/Users/luisllamas/git/bootcamp/homework/unit20/ReactApp/luis-portfolio/src/components/Sections/Contact/Contact.jsx\",\n  _s = $RefreshSig$();\n// File: /ReactApp/luis-portfolio/src/components/Sections/Contact/Contact.jsx\n\nimport React, { useState } from 'react';\nimport './Contact.css'; // Make sure to create a corresponding CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n\n  // Handle form input changes\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Validate email format\n  const validateEmail = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\\\"]{2,})$/i;\n    return re.test(String(email).toLowerCase());\n  };\n\n  // Handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    let errors = {};\n    if (!formData.name) errors.name = 'Name is required';\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!validateEmail(formData.email)) {\n      errors.email = 'Invalid email address';\n    }\n    if (!formData.message) errors.message = 'Message is required';\n    setFormErrors(errors);\n\n    // If there are no errors, submit the form (example: send to an API)\n    if (Object.keys(errors).length === 0) {\n      console.log('Form data:', formData);\n      // Reset form data and errors\n      setFormData({\n        name: '',\n        email: '',\n        message: ''\n      });\n      setFormErrors({});\n      // Here you would typically integrate with an email service\n      alert('Thank you for contacting us!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          className: formErrors.name && 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), formErrors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: formErrors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          className: formErrors.email && 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          name: \"message\",\n          value: formData.message,\n          onChange: handleChange,\n          className: formErrors.message && 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), formErrors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          children: formErrors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Contact, \"shJgwaTL4UKuSGIsthUdi3FMT3w=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","formErrors","setFormErrors","handleChange","event","value","target","validateEmail","re","test","String","toLowerCase","handleSubmit","preventDefault","errors","Object","keys","length","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/luisllamas/git/bootcamp/homework/unit20/ReactApp/luis-portfolio/src/components/Sections/Contact/Contact.jsx"],"sourcesContent":["// File: /ReactApp/luis-portfolio/src/components/Sections/Contact/Contact.jsx\n\nimport React, { useState } from 'react';\nimport './Contact.css'; // Make sure to create a corresponding CSS file for styling\n\nconst Contact = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n    const [formErrors, setFormErrors] = useState({});\n\n    // Handle form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    // Validate email format\n    const validateEmail = (email) => {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\\\"]{2,})$/i;\n        return re.test(String(email).toLowerCase());\n    };\n\n    // Handle form submission\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        let errors = {};\n        if (!formData.name) errors.name = 'Name is required';\n        if (!formData.email) {\n            errors.email = 'Email is required';\n        } else if (!validateEmail(formData.email)) {\n            errors.email = 'Invalid email address';\n        }\n        if (!formData.message) errors.message = 'Message is required';\n\n        setFormErrors(errors);\n\n        // If there are no errors, submit the form (example: send to an API)\n        if (Object.keys(errors).length === 0) {\n            console.log('Form data:', formData);\n            // Reset form data and errors\n            setFormData({ name: '', email: '', message: '' });\n            setFormErrors({});\n            // Here you would typically integrate with an email service\n            alert('Thank you for contacting us!');\n        }\n    };\n\n    return (\n        <div className=\"contact-container\">\n            <h2>Contact Me</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        className={formErrors.name && 'error'}\n                    />\n                    {formErrors.name && <p className=\"error-msg\">{formErrors.name}</p>}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        className={formErrors.email && 'error'}\n                    />\n                    {formErrors.email && <p className=\"error-msg\">{formErrors.email}</p>}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"message\">Message</label>\n                    <textarea\n                        id=\"message\"\n                        name=\"message\"\n                        value={formData.message}\n                        onChange={handleChange}\n                        className={formErrors.message && 'error'}\n                    />\n                    {formErrors.message && <p className=\"error-msg\">{formErrors.message}</p>}\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Contact;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}